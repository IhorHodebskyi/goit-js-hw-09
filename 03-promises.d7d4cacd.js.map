{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbAQ,SAASC,cAAc,aAE/BC,iBAAiB,SAetB,SAAgBC,GACdA,EAAEC,iBACF,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAEhD,IAAIC,EAAaC,OAAON,EAAMO,OAE1BC,EAAYF,OAAOL,EAAKM,OAExBE,EAAcH,OAAOJ,EAAOK,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCL,GAAcG,EAEdvB,EAAcyB,EAAGL,GACdM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAW,CAAI2B,QAAS,KAAQ,IAGtFC,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOI,QAAQ,sBAAoB9B,QAAeC,MAAW,CAAI2B,QAAS,KAAQ,IAEtFhB,EAAEK,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form.form');\n\nform.addEventListener('click', create);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction create(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n\n  let inputDelay = Number(delay.value);\n\n  let inputStep = Number(step.value);\n\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    inputDelay += inputStep;\n\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { timeout: 10000 });\n      })\n\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { timeout: 10000 });\n      });\n    e.currentTarget.reset();\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","i","then","Notify","success","timeout","catch","failure","reset"],"version":3,"file":"03-promises.d7d4cacd.js.map"}