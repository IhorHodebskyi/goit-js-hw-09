{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACDH,EACEF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAE5BA,E,IAbFQ,SAASC,cAAc,aAE/BC,iBAAiB,UActB,SAAgBC,GACVA,EAAEC,iBAOF,IANA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACjC1B,EAAc0B,EAAGL,GACVM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACbJ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,MAAK,CAC1D8B,QAAO,K,IAGpBC,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACdJ,EAAA+B,OAAOK,QAAQ,sBAAqCH,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,MAAK,CACzD8B,QAAS,K,IAG3BX,GAAcG,EACdX,EAAEG,cAAcmB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form.form');\n\nform.addEventListener('submit', create);\n\nfunction createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n            const shouldResolve = Math.random() > 0.3;\n            setTimeout(() => {\n                  if (shouldResolve) {\n                        resolve({ position, delay });\n                  } else {\n                        reject({ position, delay });\n                  }\n            }, delay);\n      });\n}\nfunction create(e) {\n      e.preventDefault();\n      const { delay, step, amount } = e.currentTarget.elements;\n\n      let inputDelay = Number(delay.value);\n      let inputStep = Number(step.value);\n      let inputAmount = Number(amount.value);\n\n      for (let i = 1; i <= inputAmount; i += 1) {\n            createPromise(i, inputDelay)\n                  .then(({ position, delay }) => {\n                        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n                              timeout: 10000,\n                        });\n                  })\n                  .catch(({ position, delay }) => {\n                        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n                              timeout: 10000,\n                        });\n                  });\n            inputDelay += inputStep;\n            e.currentTarget.reset();\n      }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","i","then","param","Notify","success","concat","timeout","catch","failure","reset"],"version":3,"file":"03-promises.81730106.js.map"}